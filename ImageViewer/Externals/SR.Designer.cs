//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.Externals {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.ImageViewer.Externals.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch via Command Line.
        /// </summary>
        internal static string DescriptionCommandLineExternal {
            get {
                return ResourceManager.GetString("DescriptionCommandLineExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External Applications.
        /// </summary>
        internal static string ExternalApplications {
            get {
                return ResourceManager.GetString("ExternalApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open DisplaySet with {0}.
        /// </summary>
        internal static string FormatOpenDisplaySetWith {
            get {
                return ResourceManager.GetString("FormatOpenDisplaySetWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Image with {0}.
        /// </summary>
        internal static string FormatOpenImageWith {
            get {
                return ResourceManager.GetString("FormatOpenImageWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment variables may be included by including the name of the variable surrounded by
        ///percent sign (%) characters (e.g. %PATH%).
        ///The sequence %% may be used where a literal % character is required.
        ///
        ///The following argument fields may be used when the external is with images on a file system:
        ///* $FILENAME$ (e.g. c:\filestore\image.dcm)
        ///* $DIRECTORY$ (e.g. c:\filestore)
        ///* $FILENAMEONLY$ (e.g. image.dcm)
        ///* $EXTENSIONONLY$ (e.g. dcm)
        ///
        ///Use $ggggeeee$ to insert the value of a DICOM attribute from the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpCommandLineExternalArgumentFields {
            get {
                return ResourceManager.GetString("HelpCommandLineExternalArgumentFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Externals.
        /// </summary>
        internal static string MenuExternals {
            get {
                return ResourceManager.GetString("MenuExternals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be empty.
        /// </summary>
        internal static string MessageValueCannotBeEmpty {
            get {
                return ResourceManager.GetString("MessageValueCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New External.
        /// </summary>
        internal static string StringNewExternal {
            get {
                return ResourceManager.GetString("StringNewExternal", resourceCulture);
            }
        }
    }
}
