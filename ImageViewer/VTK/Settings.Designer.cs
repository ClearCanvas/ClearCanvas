//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.Vtk {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Shows diagnostic tools in Tools menu.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Shows diagnostic tools in Tools menu.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowDiagnosticTools {
            get {
                return ((bool)(this["ShowDiagnosticTools"]));
            }
        }
        
        /// <summary>
        /// Logs renderer performance statistics.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Logs renderer performance statistics.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ReportRendererPerformance {
            get {
                return ((bool)(this["ReportRendererPerformance"]));
            }
        }
        
        /// <summary>
        /// Target FPS when dynamically manipulating object being rendered. Reduce this value to increase quality of image at cost to performance. Recommended range is 10-25.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Target FPS when dynamically manipulating object being rendered. Reduce this value" +
            " to increase quality of image at cost to performance. Recommended range is 10-25" +
            ".")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("15")]
        public int RendererDynamicFps {
            get {
                return ((int)(this["RendererDynamicFps"]));
            }
        }
        
        /// <summary>
        /// Minimum inactivity time in ms before rendering refinement starts
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Minimum inactivity time in ms before rendering refinement starts")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("350")]
        public int RendererRefinementDelayMs {
            get {
                return ((int)(this["RendererRefinementDelayMs"]));
            }
        }
    }
}
