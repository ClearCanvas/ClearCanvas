//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Enterprise.VersionExecutable.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataContractBase", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Common.Serialization")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionRequest))]
    public partial class DataContractBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVersionResponse", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Enterprise.Common.ServerVersi" +
        "on")]
    [System.SerializableAttribute()]
    public partial class GetVersionResponse : ClearCanvas.Enterprise.VersionExecutable.ServiceReference.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionBuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionMajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionMinorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionRevisionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Component {
            get {
                return this.ComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentField, value) != true)) {
                    this.ComponentField = value;
                    this.RaisePropertyChanged("Component");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Edition {
            get {
                return this.EditionField;
            }
            set {
                if ((object.ReferenceEquals(this.EditionField, value) != true)) {
                    this.EditionField = value;
                    this.RaisePropertyChanged("Edition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionBuild {
            get {
                return this.VersionBuildField;
            }
            set {
                if ((this.VersionBuildField.Equals(value) != true)) {
                    this.VersionBuildField = value;
                    this.RaisePropertyChanged("VersionBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionMajor {
            get {
                return this.VersionMajorField;
            }
            set {
                if ((this.VersionMajorField.Equals(value) != true)) {
                    this.VersionMajorField = value;
                    this.RaisePropertyChanged("VersionMajor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionMinor {
            get {
                return this.VersionMinorField;
            }
            set {
                if ((this.VersionMinorField.Equals(value) != true)) {
                    this.VersionMinorField = value;
                    this.RaisePropertyChanged("VersionMinor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionRevision {
            get {
                return this.VersionRevisionField;
            }
            set {
                if ((this.VersionRevisionField.Equals(value) != true)) {
                    this.VersionRevisionField = value;
                    this.RaisePropertyChanged("VersionRevision");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVersionRequest", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Enterprise.Common.ServerVersi" +
        "on")]
    [System.SerializableAttribute()]
    public partial class GetVersionRequest : ClearCanvas.Enterprise.VersionExecutable.ServiceReference.DataContractBase {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IVersionService")]
    public interface IVersionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersionService/GetVersion", ReplyAction="http://tempuri.org/IVersionService/GetVersionResponse")]
        ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionResponse GetVersion(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersionService/GetVersion2", ReplyAction="http://tempuri.org/IVersionService/GetVersion2Response")]
        ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionResponse GetVersion2(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVersionServiceChannel : ClearCanvas.Enterprise.VersionExecutable.ServiceReference.IVersionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VersionServiceClient : System.ServiceModel.ClientBase<ClearCanvas.Enterprise.VersionExecutable.ServiceReference.IVersionService>, ClearCanvas.Enterprise.VersionExecutable.ServiceReference.IVersionService {
        
        public VersionServiceClient() {
        }
        
        public VersionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VersionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionResponse GetVersion(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionRequest request) {
            return base.Channel.GetVersion(request);
        }
        
        public ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionResponse GetVersion2(ClearCanvas.Enterprise.VersionExecutable.ServiceReference.GetVersionRequest request) {
            return base.Channel.GetVersion2(request);
        }
    }
}
