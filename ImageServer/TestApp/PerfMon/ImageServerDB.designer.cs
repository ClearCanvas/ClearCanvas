#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageServer.TestApp.PerfMon
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ImageServer")]
	public partial class ImageServerDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWorkQueue(WorkQueue instance);
    partial void UpdateWorkQueue(WorkQueue instance);
    partial void DeleteWorkQueue(WorkQueue instance);
    partial void InsertWorkQueueUid(WorkQueueUid instance);
    partial void UpdateWorkQueueUid(WorkQueueUid instance);
    partial void DeleteWorkQueueUid(WorkQueueUid instance);
    partial void InsertStudy(Study instance);
    partial void UpdateStudy(Study instance);
    partial void DeleteStudy(Study instance);
    partial void InsertStudyStorage(StudyStorage instance);
    partial void UpdateStudyStorage(StudyStorage instance);
    partial void DeleteStudyStorage(StudyStorage instance);
    #endregion
		
		public ImageServerDBDataContext() : 
				base(global::ClearCanvas.ImageServer.TestApp.Properties.Settings.Default.ImageServerConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ImageServerDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageServerDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageServerDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageServerDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WorkQueue> WorkQueues
		{
			get
			{
				return this.GetTable<WorkQueue>();
			}
		}
		
		public System.Data.Linq.Table<WorkQueueUid> WorkQueueUids
		{
			get
			{
				return this.GetTable<WorkQueueUid>();
			}
		}
		
		public System.Data.Linq.Table<Study> Studies
		{
			get
			{
				return this.GetTable<Study>();
			}
		}
		
		public System.Data.Linq.Table<StudyStorage> StudyStorages
		{
			get
			{
				return this.GetTable<StudyStorage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkQueue")]
	public partial class WorkQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private System.Guid _ServerPartitionGUID;
		
		private System.Guid _StudyStorageGUID;
		
		private System.Nullable<System.Guid> _DeviceGUID;
		
		private System.Nullable<System.Guid> _StudyHistoryGUID;
		
		private short _WorkQueueTypeEnum;
		
		private short _WorkQueueStatusEnum;
		
		private short _WorkQueuePriorityEnum;
		
		private string _ProcessorID;
		
		private string _GroupID;
		
		private System.Nullable<System.DateTime> _ExpirationTime;
		
		private System.DateTime _ScheduledTime;
		
		private System.DateTime _InsertTime;
		
		private System.Nullable<System.DateTime> _LastUpdatedTime;
		
		private int _FailureCount;
		
		private string _FailureDescription;
		
		private System.Nullable<System.Guid> _ExternalRequestQueueGUID;
		
		private EntitySet<WorkQueueUid> _WorkQueueUids;
		
		private EntityRef<StudyStorage> _StudyStorage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnServerPartitionGUIDChanging(System.Guid value);
    partial void OnServerPartitionGUIDChanged();
    partial void OnStudyStorageGUIDChanging(System.Guid value);
    partial void OnStudyStorageGUIDChanged();
    partial void OnDeviceGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeviceGUIDChanged();
    partial void OnStudyHistoryGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnStudyHistoryGUIDChanged();
    partial void OnWorkQueueTypeEnumChanging(short value);
    partial void OnWorkQueueTypeEnumChanged();
    partial void OnWorkQueueStatusEnumChanging(short value);
    partial void OnWorkQueueStatusEnumChanged();
    partial void OnWorkQueuePriorityEnumChanging(short value);
    partial void OnWorkQueuePriorityEnumChanged();
    partial void OnProcessorIDChanging(string value);
    partial void OnProcessorIDChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnExpirationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationTimeChanged();
    partial void OnScheduledTimeChanging(System.DateTime value);
    partial void OnScheduledTimeChanged();
    partial void OnInsertTimeChanging(System.DateTime value);
    partial void OnInsertTimeChanged();
    partial void OnLastUpdatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedTimeChanged();
    partial void OnFailureCountChanging(int value);
    partial void OnFailureCountChanged();
    partial void OnFailureDescriptionChanging(string value);
    partial void OnFailureDescriptionChanged();
    partial void OnExternalRequestQueueGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnExternalRequestQueueGUIDChanged();
    #endregion
		
		public WorkQueue()
		{
			this._WorkQueueUids = new EntitySet<WorkQueueUid>(new Action<WorkQueueUid>(this.attach_WorkQueueUids), new Action<WorkQueueUid>(this.detach_WorkQueueUids));
			this._StudyStorage = default(EntityRef<StudyStorage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPartitionGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServerPartitionGUID
		{
			get
			{
				return this._ServerPartitionGUID;
			}
			set
			{
				if ((this._ServerPartitionGUID != value))
				{
					this.OnServerPartitionGUIDChanging(value);
					this.SendPropertyChanging();
					this._ServerPartitionGUID = value;
					this.SendPropertyChanged("ServerPartitionGUID");
					this.OnServerPartitionGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyStorageGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StudyStorageGUID
		{
			get
			{
				return this._StudyStorageGUID;
			}
			set
			{
				if ((this._StudyStorageGUID != value))
				{
					if (this._StudyStorage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudyStorageGUIDChanging(value);
					this.SendPropertyChanging();
					this._StudyStorageGUID = value;
					this.SendPropertyChanged("StudyStorageGUID");
					this.OnStudyStorageGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeviceGUID
		{
			get
			{
				return this._DeviceGUID;
			}
			set
			{
				if ((this._DeviceGUID != value))
				{
					this.OnDeviceGUIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceGUID = value;
					this.SendPropertyChanged("DeviceGUID");
					this.OnDeviceGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyHistoryGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StudyHistoryGUID
		{
			get
			{
				return this._StudyHistoryGUID;
			}
			set
			{
				if ((this._StudyHistoryGUID != value))
				{
					this.OnStudyHistoryGUIDChanging(value);
					this.SendPropertyChanging();
					this._StudyHistoryGUID = value;
					this.SendPropertyChanged("StudyHistoryGUID");
					this.OnStudyHistoryGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQueueTypeEnum", DbType="SmallInt NOT NULL")]
		public short WorkQueueTypeEnum
		{
			get
			{
				return this._WorkQueueTypeEnum;
			}
			set
			{
				if ((this._WorkQueueTypeEnum != value))
				{
					this.OnWorkQueueTypeEnumChanging(value);
					this.SendPropertyChanging();
					this._WorkQueueTypeEnum = value;
					this.SendPropertyChanged("WorkQueueTypeEnum");
					this.OnWorkQueueTypeEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQueueStatusEnum", DbType="SmallInt NOT NULL")]
		public short WorkQueueStatusEnum
		{
			get
			{
				return this._WorkQueueStatusEnum;
			}
			set
			{
				if ((this._WorkQueueStatusEnum != value))
				{
					this.OnWorkQueueStatusEnumChanging(value);
					this.SendPropertyChanging();
					this._WorkQueueStatusEnum = value;
					this.SendPropertyChanged("WorkQueueStatusEnum");
					this.OnWorkQueueStatusEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQueuePriorityEnum", DbType="SmallInt NOT NULL")]
		public short WorkQueuePriorityEnum
		{
			get
			{
				return this._WorkQueuePriorityEnum;
			}
			set
			{
				if ((this._WorkQueuePriorityEnum != value))
				{
					this.OnWorkQueuePriorityEnumChanging(value);
					this.SendPropertyChanging();
					this._WorkQueuePriorityEnum = value;
					this.SendPropertyChanged("WorkQueuePriorityEnum");
					this.OnWorkQueuePriorityEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorID", DbType="VarChar(128)")]
		public string ProcessorID
		{
			get
			{
				return this._ProcessorID;
			}
			set
			{
				if ((this._ProcessorID != value))
				{
					this.OnProcessorIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessorID = value;
					this.SendPropertyChanged("ProcessorID");
					this.OnProcessorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="VarChar(64)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTime", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this.OnScheduledTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTime = value;
					this.SendPropertyChanged("ScheduledTime");
					this.OnScheduledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime NOT NULL")]
		public System.DateTime InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedTime
		{
			get
			{
				return this._LastUpdatedTime;
			}
			set
			{
				if ((this._LastUpdatedTime != value))
				{
					this.OnLastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedTime = value;
					this.SendPropertyChanged("LastUpdatedTime");
					this.OnLastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureCount", DbType="Int NOT NULL")]
		public int FailureCount
		{
			get
			{
				return this._FailureCount;
			}
			set
			{
				if ((this._FailureCount != value))
				{
					this.OnFailureCountChanging(value);
					this.SendPropertyChanging();
					this._FailureCount = value;
					this.SendPropertyChanged("FailureCount");
					this.OnFailureCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureDescription", DbType="NVarChar(512)")]
		public string FailureDescription
		{
			get
			{
				return this._FailureDescription;
			}
			set
			{
				if ((this._FailureDescription != value))
				{
					this.OnFailureDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FailureDescription = value;
					this.SendPropertyChanged("FailureDescription");
					this.OnFailureDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalRequestQueueGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExternalRequestQueueGUID
		{
			get
			{
				return this._ExternalRequestQueueGUID;
			}
			set
			{
				if ((this._ExternalRequestQueueGUID != value))
				{
					this.OnExternalRequestQueueGUIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalRequestQueueGUID = value;
					this.SendPropertyChanged("ExternalRequestQueueGUID");
					this.OnExternalRequestQueueGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkQueue_WorkQueueUid", Storage="_WorkQueueUids", ThisKey="GUID", OtherKey="WorkQueueGUID")]
		public EntitySet<WorkQueueUid> WorkQueueUids
		{
			get
			{
				return this._WorkQueueUids;
			}
			set
			{
				this._WorkQueueUids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudyStorage_WorkQueue", Storage="_StudyStorage", ThisKey="StudyStorageGUID", OtherKey="GUID", IsForeignKey=true)]
		public StudyStorage StudyStorage
		{
			get
			{
				return this._StudyStorage.Entity;
			}
			set
			{
				StudyStorage previousValue = this._StudyStorage.Entity;
				if (((previousValue != value) 
							|| (this._StudyStorage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudyStorage.Entity = null;
						previousValue.WorkQueues.Remove(this);
					}
					this._StudyStorage.Entity = value;
					if ((value != null))
					{
						value.WorkQueues.Add(this);
						this._StudyStorageGUID = value.GUID;
					}
					else
					{
						this._StudyStorageGUID = default(System.Guid);
					}
					this.SendPropertyChanged("StudyStorage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkQueueUids(WorkQueueUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkQueue = this;
		}
		
		private void detach_WorkQueueUids(WorkQueueUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkQueue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkQueueUid")]
	public partial class WorkQueueUid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private System.Guid _WorkQueueGUID;
		
		private string _SeriesInstanceUid;
		
		private string _SopInstanceUid;
		
		private bool _Failed;
		
		private bool _Duplicate;
		
		private string _Extension;
		
		private short _FailureCount;
		
		private string _GroupID;
		
		private EntityRef<WorkQueue> _WorkQueue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnWorkQueueGUIDChanging(System.Guid value);
    partial void OnWorkQueueGUIDChanged();
    partial void OnSeriesInstanceUidChanging(string value);
    partial void OnSeriesInstanceUidChanged();
    partial void OnSopInstanceUidChanging(string value);
    partial void OnSopInstanceUidChanged();
    partial void OnFailedChanging(bool value);
    partial void OnFailedChanged();
    partial void OnDuplicateChanging(bool value);
    partial void OnDuplicateChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnFailureCountChanging(short value);
    partial void OnFailureCountChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    #endregion
		
		public WorkQueueUid()
		{
			this._WorkQueue = default(EntityRef<WorkQueue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQueueGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkQueueGUID
		{
			get
			{
				return this._WorkQueueGUID;
			}
			set
			{
				if ((this._WorkQueueGUID != value))
				{
					if (this._WorkQueue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkQueueGUIDChanging(value);
					this.SendPropertyChanging();
					this._WorkQueueGUID = value;
					this.SendPropertyChanged("WorkQueueGUID");
					this.OnWorkQueueGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriesInstanceUid", DbType="VarChar(64)")]
		public string SeriesInstanceUid
		{
			get
			{
				return this._SeriesInstanceUid;
			}
			set
			{
				if ((this._SeriesInstanceUid != value))
				{
					this.OnSeriesInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SeriesInstanceUid = value;
					this.SendPropertyChanged("SeriesInstanceUid");
					this.OnSeriesInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SopInstanceUid", DbType="VarChar(64)")]
		public string SopInstanceUid
		{
			get
			{
				return this._SopInstanceUid;
			}
			set
			{
				if ((this._SopInstanceUid != value))
				{
					this.OnSopInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SopInstanceUid = value;
					this.SendPropertyChanged("SopInstanceUid");
					this.OnSopInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Failed", DbType="Bit NOT NULL")]
		public bool Failed
		{
			get
			{
				return this._Failed;
			}
			set
			{
				if ((this._Failed != value))
				{
					this.OnFailedChanging(value);
					this.SendPropertyChanging();
					this._Failed = value;
					this.SendPropertyChanged("Failed");
					this.OnFailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duplicate", DbType="Bit NOT NULL")]
		public bool Duplicate
		{
			get
			{
				return this._Duplicate;
			}
			set
			{
				if ((this._Duplicate != value))
				{
					this.OnDuplicateChanging(value);
					this.SendPropertyChanging();
					this._Duplicate = value;
					this.SendPropertyChanged("Duplicate");
					this.OnDuplicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(10)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureCount", DbType="SmallInt NOT NULL")]
		public short FailureCount
		{
			get
			{
				return this._FailureCount;
			}
			set
			{
				if ((this._FailureCount != value))
				{
					this.OnFailureCountChanging(value);
					this.SendPropertyChanging();
					this._FailureCount = value;
					this.SendPropertyChanged("FailureCount");
					this.OnFailureCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="VarChar(64)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkQueue_WorkQueueUid", Storage="_WorkQueue", ThisKey="WorkQueueGUID", OtherKey="GUID", IsForeignKey=true)]
		public WorkQueue WorkQueue
		{
			get
			{
				return this._WorkQueue.Entity;
			}
			set
			{
				WorkQueue previousValue = this._WorkQueue.Entity;
				if (((previousValue != value) 
							|| (this._WorkQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkQueue.Entity = null;
						previousValue.WorkQueueUids.Remove(this);
					}
					this._WorkQueue.Entity = value;
					if ((value != null))
					{
						value.WorkQueueUids.Add(this);
						this._WorkQueueGUID = value.GUID;
					}
					else
					{
						this._WorkQueueGUID = default(System.Guid);
					}
					this.SendPropertyChanged("WorkQueue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Study")]
	public partial class Study : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private System.Guid _ServerPartitionGUID;
		
		private System.Nullable<System.Guid> _StudyStorageGUID;
		
		private string _SpecificCharacterSet;
		
		private string _StudyInstanceUid;
		
		private int _NumberOfStudyRelatedSeries;
		
		private int _NumberOfStudyRelatedInstances;
		
		private EntityRef<StudyStorage> _StudyStorage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnServerPartitionGUIDChanging(System.Guid value);
    partial void OnServerPartitionGUIDChanged();
    partial void OnStudyStorageGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnStudyStorageGUIDChanged();
    partial void OnSpecificCharacterSetChanging(string value);
    partial void OnSpecificCharacterSetChanged();
    partial void OnStudyInstanceUidChanging(string value);
    partial void OnStudyInstanceUidChanged();
    partial void OnNumberOfStudyRelatedSeriesChanging(int value);
    partial void OnNumberOfStudyRelatedSeriesChanged();
    partial void OnNumberOfStudyRelatedInstancesChanging(int value);
    partial void OnNumberOfStudyRelatedInstancesChanged();
    #endregion
		
		public Study()
		{
			this._StudyStorage = default(EntityRef<StudyStorage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPartitionGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServerPartitionGUID
		{
			get
			{
				return this._ServerPartitionGUID;
			}
			set
			{
				if ((this._ServerPartitionGUID != value))
				{
					this.OnServerPartitionGUIDChanging(value);
					this.SendPropertyChanging();
					this._ServerPartitionGUID = value;
					this.SendPropertyChanged("ServerPartitionGUID");
					this.OnServerPartitionGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyStorageGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StudyStorageGUID
		{
			get
			{
				return this._StudyStorageGUID;
			}
			set
			{
				if ((this._StudyStorageGUID != value))
				{
					if (this._StudyStorage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudyStorageGUIDChanging(value);
					this.SendPropertyChanging();
					this._StudyStorageGUID = value;
					this.SendPropertyChanged("StudyStorageGUID");
					this.OnStudyStorageGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificCharacterSet", DbType="VarChar(128)")]
		public string SpecificCharacterSet
		{
			get
			{
				return this._SpecificCharacterSet;
			}
			set
			{
				if ((this._SpecificCharacterSet != value))
				{
					this.OnSpecificCharacterSetChanging(value);
					this.SendPropertyChanging();
					this._SpecificCharacterSet = value;
					this.SendPropertyChanged("SpecificCharacterSet");
					this.OnSpecificCharacterSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyInstanceUid", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStudyRelatedSeries", DbType="Int NOT NULL")]
		public int NumberOfStudyRelatedSeries
		{
			get
			{
				return this._NumberOfStudyRelatedSeries;
			}
			set
			{
				if ((this._NumberOfStudyRelatedSeries != value))
				{
					this.OnNumberOfStudyRelatedSeriesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedSeries = value;
					this.SendPropertyChanged("NumberOfStudyRelatedSeries");
					this.OnNumberOfStudyRelatedSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStudyRelatedInstances", DbType="Int NOT NULL")]
		public int NumberOfStudyRelatedInstances
		{
			get
			{
				return this._NumberOfStudyRelatedInstances;
			}
			set
			{
				if ((this._NumberOfStudyRelatedInstances != value))
				{
					this.OnNumberOfStudyRelatedInstancesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedInstances = value;
					this.SendPropertyChanged("NumberOfStudyRelatedInstances");
					this.OnNumberOfStudyRelatedInstancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudyStorage_Study", Storage="_StudyStorage", ThisKey="StudyStorageGUID", OtherKey="GUID", IsForeignKey=true)]
		public StudyStorage StudyStorage
		{
			get
			{
				return this._StudyStorage.Entity;
			}
			set
			{
				StudyStorage previousValue = this._StudyStorage.Entity;
				if (((previousValue != value) 
							|| (this._StudyStorage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudyStorage.Entity = null;
						previousValue.Studies.Remove(this);
					}
					this._StudyStorage.Entity = value;
					if ((value != null))
					{
						value.Studies.Add(this);
						this._StudyStorageGUID = value.GUID;
					}
					else
					{
						this._StudyStorageGUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StudyStorage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudyStorage")]
	public partial class StudyStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private System.Guid _ServerPartitionGUID;
		
		private string _StudyInstanceUid;
		
		private System.DateTime _InsertTime;
		
		private System.DateTime _LastAccessedTime;
		
		private bool _WriteLock;
		
		private short _ReadLock;
		
		private short _StudyStatusEnum;
		
		private short _QueueStudyStateEnum;
		
		private EntitySet<WorkQueue> _WorkQueues;
		
		private EntitySet<Study> _Studies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnServerPartitionGUIDChanging(System.Guid value);
    partial void OnServerPartitionGUIDChanged();
    partial void OnStudyInstanceUidChanging(string value);
    partial void OnStudyInstanceUidChanged();
    partial void OnInsertTimeChanging(System.DateTime value);
    partial void OnInsertTimeChanged();
    partial void OnLastAccessedTimeChanging(System.DateTime value);
    partial void OnLastAccessedTimeChanged();
    partial void OnWriteLockChanging(bool value);
    partial void OnWriteLockChanged();
    partial void OnReadLockChanging(short value);
    partial void OnReadLockChanged();
    partial void OnStudyStatusEnumChanging(short value);
    partial void OnStudyStatusEnumChanged();
    partial void OnQueueStudyStateEnumChanging(short value);
    partial void OnQueueStudyStateEnumChanged();
    #endregion
		
		public StudyStorage()
		{
			this._WorkQueues = new EntitySet<WorkQueue>(new Action<WorkQueue>(this.attach_WorkQueues), new Action<WorkQueue>(this.detach_WorkQueues));
			this._Studies = new EntitySet<Study>(new Action<Study>(this.attach_Studies), new Action<Study>(this.detach_Studies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPartitionGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServerPartitionGUID
		{
			get
			{
				return this._ServerPartitionGUID;
			}
			set
			{
				if ((this._ServerPartitionGUID != value))
				{
					this.OnServerPartitionGUIDChanging(value);
					this.SendPropertyChanging();
					this._ServerPartitionGUID = value;
					this.SendPropertyChanged("ServerPartitionGUID");
					this.OnServerPartitionGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyInstanceUid", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime NOT NULL")]
		public System.DateTime InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastAccessedTime
		{
			get
			{
				return this._LastAccessedTime;
			}
			set
			{
				if ((this._LastAccessedTime != value))
				{
					this.OnLastAccessedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastAccessedTime = value;
					this.SendPropertyChanged("LastAccessedTime");
					this.OnLastAccessedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriteLock", DbType="Bit NOT NULL")]
		public bool WriteLock
		{
			get
			{
				return this._WriteLock;
			}
			set
			{
				if ((this._WriteLock != value))
				{
					this.OnWriteLockChanging(value);
					this.SendPropertyChanging();
					this._WriteLock = value;
					this.SendPropertyChanged("WriteLock");
					this.OnWriteLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadLock", DbType="SmallInt NOT NULL")]
		public short ReadLock
		{
			get
			{
				return this._ReadLock;
			}
			set
			{
				if ((this._ReadLock != value))
				{
					this.OnReadLockChanging(value);
					this.SendPropertyChanging();
					this._ReadLock = value;
					this.SendPropertyChanged("ReadLock");
					this.OnReadLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyStatusEnum", DbType="SmallInt NOT NULL")]
		public short StudyStatusEnum
		{
			get
			{
				return this._StudyStatusEnum;
			}
			set
			{
				if ((this._StudyStatusEnum != value))
				{
					this.OnStudyStatusEnumChanging(value);
					this.SendPropertyChanging();
					this._StudyStatusEnum = value;
					this.SendPropertyChanged("StudyStatusEnum");
					this.OnStudyStatusEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueStudyStateEnum", DbType="SmallInt NOT NULL")]
		public short QueueStudyStateEnum
		{
			get
			{
				return this._QueueStudyStateEnum;
			}
			set
			{
				if ((this._QueueStudyStateEnum != value))
				{
					this.OnQueueStudyStateEnumChanging(value);
					this.SendPropertyChanging();
					this._QueueStudyStateEnum = value;
					this.SendPropertyChanged("QueueStudyStateEnum");
					this.OnQueueStudyStateEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudyStorage_WorkQueue", Storage="_WorkQueues", ThisKey="GUID", OtherKey="StudyStorageGUID")]
		public EntitySet<WorkQueue> WorkQueues
		{
			get
			{
				return this._WorkQueues;
			}
			set
			{
				this._WorkQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudyStorage_Study", Storage="_Studies", ThisKey="GUID", OtherKey="StudyStorageGUID")]
		public EntitySet<Study> Studies
		{
			get
			{
				return this._Studies;
			}
			set
			{
				this._Studies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkQueues(WorkQueue entity)
		{
			this.SendPropertyChanging();
			entity.StudyStorage = this;
		}
		
		private void detach_WorkQueues(WorkQueue entity)
		{
			this.SendPropertyChanging();
			entity.StudyStorage = null;
		}
		
		private void attach_Studies(Study entity)
		{
			this.SendPropertyChanging();
			entity.StudyStorage = this;
		}
		
		private void detach_Studies(Study entity)
		{
			this.SendPropertyChanging();
			entity.StudyStorage = null;
		}
	}
}
#pragma warning restore 1591
