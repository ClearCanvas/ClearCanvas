#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model
{
    using System;
    using System.Collections.Generic;
    using ClearCanvas.ImageServer.Model.EntityBrokers;
    using ClearCanvas.ImageServer.Enterprise;
    using System.Reflection;

[Serializable]
public partial class DuplicateSopPolicyEnum : ServerEnum
{
      #region Private Static Members
      private static readonly DuplicateSopPolicyEnum _SendSuccess = GetEnum("SendSuccess");
      private static readonly DuplicateSopPolicyEnum _RejectDuplicates = GetEnum("RejectDuplicates");
      private static readonly DuplicateSopPolicyEnum _CompareDuplicates = GetEnum("CompareDuplicates");
      private static readonly DuplicateSopPolicyEnum _AcceptLatest = GetEnum("AcceptLatest");
      #endregion

      #region Public Static Properties
      /// <summary>
      /// Send a DICOM C-STORE-RSP success status when receiving a duplicate, but ignore the file.
      /// </summary>
      public static DuplicateSopPolicyEnum SendSuccess
      {
          get { return _SendSuccess; }
      }
      /// <summary>
      /// Send a DICOM C-STORE-RSP reject status when receiving a duplicate.
      /// </summary>
      public static DuplicateSopPolicyEnum RejectDuplicates
      {
          get { return _RejectDuplicates; }
      }
      /// <summary>
      /// Process duplicate objects received and compare them to originals flagging any differences as a failure.
      /// </summary>
      public static DuplicateSopPolicyEnum CompareDuplicates
      {
          get { return _CompareDuplicates; }
      }
      /// <summary>
      /// Process duplicate objects received and always accecpt the latest file received.
      /// </summary>
      public static DuplicateSopPolicyEnum AcceptLatest
      {
          get { return _AcceptLatest; }
      }

      #endregion

      #region Constructors
      public DuplicateSopPolicyEnum():base("DuplicateSopPolicyEnum")
      {}
      #endregion
      #region Public Members
      public override void SetEnum(short val)
      {
          ServerEnumHelper<DuplicateSopPolicyEnum, IDuplicateSopPolicyEnumBroker>.SetEnum(this, val);
      }
      static public List<DuplicateSopPolicyEnum> GetAll()
      {
          return ServerEnumHelper<DuplicateSopPolicyEnum, IDuplicateSopPolicyEnumBroker>.GetAll();
      }
      static public DuplicateSopPolicyEnum GetEnum(string lookup)
      {
          return ServerEnumHelper<DuplicateSopPolicyEnum, IDuplicateSopPolicyEnumBroker>.GetEnum(lookup);
      }
      #endregion
}
}
