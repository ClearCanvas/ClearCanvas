#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.ImageServer.Enterprise;

   public partial class NotificationQueueUpdateColumns : EntityUpdateColumns
   {
       public NotificationQueueUpdateColumns()
       : base("NotificationQueue")
       {}
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="ExternalRequestQueueGUID")]
        public ServerEntityKey ExternalRequestQueueKey
        {
            set { SubParameters["ExternalRequestQueueKey"] = new EntityUpdateColumn<ServerEntityKey>("ExternalRequestQueueKey", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="RestNotificationUrl")]
        public String RestNotificationUrl
        {
            set { SubParameters["RestNotificationUrl"] = new EntityUpdateColumn<String>("RestNotificationUrl", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="NotificationXml")]
        public XmlDocument NotificationXml
        {
            set { SubParameters["NotificationXml"] = new EntityUpdateColumn<XmlDocument>("NotificationXml", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="InsertTime")]
        public DateTime InsertTime
        {
            set { SubParameters["InsertTime"] = new EntityUpdateColumn<DateTime>("InsertTime", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="LastTryTime")]
        public DateTime LastTryTime
        {
            set { SubParameters["LastTryTime"] = new EntityUpdateColumn<DateTime>("LastTryTime", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="Failed")]
        public Boolean Failed
        {
            set { SubParameters["Failed"] = new EntityUpdateColumn<Boolean>("Failed", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="NotificationQueue", ColumnName="RetryCount")]
        public Int32 RetryCount
        {
            set { SubParameters["RetryCount"] = new EntityUpdateColumn<Int32>("RetryCount", value); }
        }
    }
}
