#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.ImageServer.Enterprise;

   public partial class WorkQueueTypePropertiesUpdateColumns : EntityUpdateColumns
   {
       public WorkQueueTypePropertiesUpdateColumns()
       : base("WorkQueueTypeProperties")
       {}
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="WorkQueueTypeEnum")]
        public WorkQueueTypeEnum WorkQueueTypeEnum
        {
            set { SubParameters["WorkQueueTypeEnum"] = new EntityUpdateColumn<WorkQueueTypeEnum>("WorkQueueTypeEnum", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="WorkQueuePriorityEnum")]
        public WorkQueuePriorityEnum WorkQueuePriorityEnum
        {
            set { SubParameters["WorkQueuePriorityEnum"] = new EntityUpdateColumn<WorkQueuePriorityEnum>("WorkQueuePriorityEnum", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="MemoryLimited")]
        public Boolean MemoryLimited
        {
            set { SubParameters["MemoryLimited"] = new EntityUpdateColumn<Boolean>("MemoryLimited", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="AlertFailedWorkQueue")]
        public Boolean AlertFailedWorkQueue
        {
            set { SubParameters["AlertFailedWorkQueue"] = new EntityUpdateColumn<Boolean>("AlertFailedWorkQueue", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="MaxFailureCount")]
        public Int32 MaxFailureCount
        {
            set { SubParameters["MaxFailureCount"] = new EntityUpdateColumn<Int32>("MaxFailureCount", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="ProcessDelaySeconds")]
        public Int32 ProcessDelaySeconds
        {
            set { SubParameters["ProcessDelaySeconds"] = new EntityUpdateColumn<Int32>("ProcessDelaySeconds", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="FailureDelaySeconds")]
        public Int32 FailureDelaySeconds
        {
            set { SubParameters["FailureDelaySeconds"] = new EntityUpdateColumn<Int32>("FailureDelaySeconds", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="DeleteDelaySeconds")]
        public Int32 DeleteDelaySeconds
        {
            set { SubParameters["DeleteDelaySeconds"] = new EntityUpdateColumn<Int32>("DeleteDelaySeconds", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="PostponeDelaySeconds")]
        public Int32 PostponeDelaySeconds
        {
            set { SubParameters["PostponeDelaySeconds"] = new EntityUpdateColumn<Int32>("PostponeDelaySeconds", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="ExpireDelaySeconds")]
        public Int32 ExpireDelaySeconds
        {
            set { SubParameters["ExpireDelaySeconds"] = new EntityUpdateColumn<Int32>("ExpireDelaySeconds", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="MaxBatchSize")]
        public Int32 MaxBatchSize
        {
            set { SubParameters["MaxBatchSize"] = new EntityUpdateColumn<Int32>("MaxBatchSize", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="ReadLock")]
        public Boolean ReadLock
        {
            set { SubParameters["ReadLock"] = new EntityUpdateColumn<Boolean>("ReadLock", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="WriteLock")]
        public Boolean WriteLock
        {
            set { SubParameters["WriteLock"] = new EntityUpdateColumn<Boolean>("WriteLock", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="QueueStudyStateEnum")]
        public QueueStudyStateEnum QueueStudyStateEnum
        {
            set { SubParameters["QueueStudyStateEnum"] = new EntityUpdateColumn<QueueStudyStateEnum>("QueueStudyStateEnum", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="WorkQueueTypeProperties", ColumnName="QueueStudyStateOrder")]
        public Int16 QueueStudyStateOrder
        {
            set { SubParameters["QueueStudyStateOrder"] = new EntityUpdateColumn<Int16>("QueueStudyStateOrder", value); }
        }
    }
}
