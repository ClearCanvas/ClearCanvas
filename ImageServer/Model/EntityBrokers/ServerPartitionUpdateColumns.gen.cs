#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.ImageServer.Enterprise;

   public partial class ServerPartitionUpdateColumns : EntityUpdateColumns
   {
       public ServerPartitionUpdateColumns()
       : base("ServerPartition")
       {}
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="Enabled")]
        public Boolean Enabled
        {
            set { SubParameters["Enabled"] = new EntityUpdateColumn<Boolean>("Enabled", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="Description")]
        public String Description
        {
            set { SubParameters["Description"] = new EntityUpdateColumn<String>("Description", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="AeTitle")]
        public String AeTitle
        {
            set { SubParameters["AeTitle"] = new EntityUpdateColumn<String>("AeTitle", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="Port")]
        public Int32 Port
        {
            set { SubParameters["Port"] = new EntityUpdateColumn<Int32>("Port", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="PartitionFolder")]
        public String PartitionFolder
        {
            set { SubParameters["PartitionFolder"] = new EntityUpdateColumn<String>("PartitionFolder", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="AcceptAnyDevice")]
        public Boolean AcceptAnyDevice
        {
            set { SubParameters["AcceptAnyDevice"] = new EntityUpdateColumn<Boolean>("AcceptAnyDevice", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="AuditDeleteStudy")]
        public Boolean AuditDeleteStudy
        {
            set { SubParameters["AuditDeleteStudy"] = new EntityUpdateColumn<Boolean>("AuditDeleteStudy", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="AutoInsertDevice")]
        public Boolean AutoInsertDevice
        {
            set { SubParameters["AutoInsertDevice"] = new EntityUpdateColumn<Boolean>("AutoInsertDevice", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="DefaultRemotePort")]
        public Int32 DefaultRemotePort
        {
            set { SubParameters["DefaultRemotePort"] = new EntityUpdateColumn<Int32>("DefaultRemotePort", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="StudyCount")]
        public Int32 StudyCount
        {
            set { SubParameters["StudyCount"] = new EntityUpdateColumn<Int32>("StudyCount", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="DuplicateSopPolicyEnum")]
        public DuplicateSopPolicyEnum DuplicateSopPolicyEnum
        {
            set { SubParameters["DuplicateSopPolicyEnum"] = new EntityUpdateColumn<DuplicateSopPolicyEnum>("DuplicateSopPolicyEnum", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchAccessionNumber")]
        public Boolean MatchAccessionNumber
        {
            set { SubParameters["MatchAccessionNumber"] = new EntityUpdateColumn<Boolean>("MatchAccessionNumber", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchIssuerOfPatientId")]
        public Boolean MatchIssuerOfPatientId
        {
            set { SubParameters["MatchIssuerOfPatientId"] = new EntityUpdateColumn<Boolean>("MatchIssuerOfPatientId", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchPatientId")]
        public Boolean MatchPatientId
        {
            set { SubParameters["MatchPatientId"] = new EntityUpdateColumn<Boolean>("MatchPatientId", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchPatientsBirthDate")]
        public Boolean MatchPatientsBirthDate
        {
            set { SubParameters["MatchPatientsBirthDate"] = new EntityUpdateColumn<Boolean>("MatchPatientsBirthDate", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchPatientsName")]
        public Boolean MatchPatientsName
        {
            set { SubParameters["MatchPatientsName"] = new EntityUpdateColumn<Boolean>("MatchPatientsName", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="MatchPatientsSex")]
        public Boolean MatchPatientsSex
        {
            set { SubParameters["MatchPatientsSex"] = new EntityUpdateColumn<Boolean>("MatchPatientsSex", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="AcceptLatestReport")]
        public Boolean AcceptLatestReport
        {
            set { SubParameters["AcceptLatestReport"] = new EntityUpdateColumn<Boolean>("AcceptLatestReport", value); }
        }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerPartition", ColumnName="ServerPartitionTypeEnum")]
        public ServerPartitionTypeEnum ServerPartitionTypeEnum
        {
            set { SubParameters["ServerPartitionTypeEnum"] = new EntityUpdateColumn<ServerPartitionTypeEnum>("ServerPartitionTypeEnum", value); }
        }
    }
}
