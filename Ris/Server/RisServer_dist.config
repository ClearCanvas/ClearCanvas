<?xml version="1.0"?>
<configuration>
	<configSections>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="ClearCanvas.Ris.Server.WebServicesSettings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
			<section name="ClearCanvas.Enterprise.Common.RemoteCoreServiceSettings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
		<section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate"/>
	</configSections>
	<applicationSettings>
		<ClearCanvas.Enterprise.Common.RemoteCoreServiceSettings>
			<setting name="BaseUrl" serializeAs="String">
				<value>net.tcp://localhost:9999/</value>
			</setting>
			<setting name="FailoverBaseUrl" serializeAs="String">
				<value></value>
			</setting>
			<setting name="ConfigurationClass" serializeAs="String">
				<value>ClearCanvas.Enterprise.Common.ServiceConfiguration.Client.NetTcpConfiguration, ClearCanvas.Enterprise.Common</value>
			</setting>
			<setting name="MaxReceivedMessageSize" serializeAs="String">
				<value>2000000</value>
			</setting>
			<setting name="CertificateValidationMode" serializeAs="String">
				<value>None</value>
			</setting>
			<setting name="RevocationMode" serializeAs="String">
				<value>NoCheck</value>
			</setting>
			<setting name="UserCredentialsProviderClass" serializeAs="String">
				<value>ClearCanvas.Enterprise.Common.DefaultUserCredentialsProvider, ClearCanvas.Enterprise.Common</value>
			</setting>
		</ClearCanvas.Enterprise.Common.RemoteCoreServiceSettings>
		<ClearCanvas.Ris.Server.WebServicesSettings>
			<setting name="BaseUrl" serializeAs="String">
				<value>net.tcp://localhost:8000/</value>
			</setting>
			<setting name="SendExceptionDetailToClient" serializeAs="String">
				<value>False</value>
			</setting>
			<setting name="ConfigurationClass" serializeAs="String">
				<value>ClearCanvas.Enterprise.Common.ServiceConfiguration.Server.NetTcpConfiguration, ClearCanvas.Enterprise.Common</value>
			</setting>
			<setting name="MaxReceivedMessageSize" serializeAs="String">
				<value>1000000</value>
			</setting>
			<setting name="EnablePerformanceLogging" serializeAs="String">
				<value>False</value>
			</setting>
			<setting name="CertificateFindType" serializeAs="String">
				<value>FindBySubjectDistinguishedName</value>
			</setting>
			<setting name="CertificateCustomFindValue" serializeAs="String">
				<value />
			</setting>
			<setting name="CertificateStoreLocation" serializeAs="String">
				<value>LocalMachine</value>
			</setting>
			<setting name="CertificateStoreName" serializeAs="String">
				<value>My</value>
			</setting>
		</ClearCanvas.Ris.Server.WebServicesSettings>
	</applicationSettings>
	<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
		<session-factory>
			<!--MS SQL-->
			<property name="proxyfactory.factory_class">NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>
			<property name="dialect">NHibernate.Dialect.MsSql2000Dialect</property>
			<property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
			<property name="connection.connection_string">Data Source=.;Initial Catalog=ris;Integrated Security=true</property>
			<property name="default_schema">ris.dbo</property>

			<!-- common properties -->
			<property name="use_proxy_validator">false</property>
			<property name="connection.release_mode">on_close</property>
			<property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
			<property name="connection.isolation">ReadCommitted</property>
			<property name="cache.provider_class">NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache</property>
			<property name="cache.use_second_level_cache">true</property>
			<property name="cache.use_query_cache">true</property>
			<property name="cache.default_expiration">180</property>
		</session-factory>
	</hibernate-configuration>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
	</startup>
</configuration>
