//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Ris.Application.Common {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class AttachedDocumentSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static AttachedDocumentSettings defaultInstance = ((AttachedDocumentSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new AttachedDocumentSettings())));
        
        public static AttachedDocumentSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// User ID for FTP site where attached documents are stored.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("User ID for FTP site where attached documents are stored.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string FtpUserId {
            get {
                return ((string)(this["FtpUserId"]));
            }
        }
        
        /// <summary>
        /// Password for FTP site where attached documents are stored.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Password for FTP site where attached documents are stored.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string FtpPassword {
            get {
                return ((string)(this["FtpPassword"]));
            }
        }
        
        /// <summary>
        /// Specifies whether FTP passive mode is enabled.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Specifies whether FTP passive mode is enabled.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FtpPassiveMode {
            get {
                return ((bool)(this["FtpPassiveMode"]));
            }
        }
        
        /// <summary>
        /// Base URL of the FTP attached document store.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Base URL of the FTP attached document store.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ftp://localhost")]
        public string FtpBaseUrl {
            get {
                return ((string)(this["FtpBaseUrl"]));
            }
        }
        
        /// <summary>
        /// Time-to-live in the download cache, in seconds.  The file will then be deleted in the interest of patient confidentialty.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Time-to-live in the download cache, in seconds.  The file will then be deleted in" +
            " the interest of patient confidentialty.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("60")]
        public int DownloadCacheTimeToLive {
            get {
                return ((int)(this["DownloadCacheTimeToLive"]));
            }
        }
    }
}
