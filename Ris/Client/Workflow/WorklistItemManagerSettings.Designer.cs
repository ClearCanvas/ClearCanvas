//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Ris.Client.Workflow {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.4.0.0")]
    internal sealed partial class WorklistItemManagerSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static WorklistItemManagerSettings defaultInstance = ((WorklistItemManagerSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new WorklistItemManagerSettings())));
        
        public static WorklistItemManagerSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Indicates if the next workflow item should be automatically loaded when the current one is completed.  If not, the component will be closed.  Applies to the reporting, protocolling and transcription components.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Indicates if the next workflow item should be automatically loaded when the curre" +
            "nt one is completed.  If not, the component will be closed.  Applies to the repo" +
            "rting, protocolling and transcription components.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShouldProceedToNextItem {
            get {
                return ((bool)(this["ShouldProceedToNextItem"]));
            }
            set {
                this["ShouldProceedToNextItem"] = value;
            }
        }
    }
}
